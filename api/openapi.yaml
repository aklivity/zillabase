openapi: 3.0.2
info:
  title: Zillabase REST v1
  description: This is the Zillabase admin server.
  version: 0.1.0
  license:
    name: Aklivity Community License
    url: https://github.com/aklivity/zillabase/blob/main/LICENSE
  contact:
    name: Aklivity Community
    url: https://www.aklivity.io/slack
externalDocs:
  description: Demo Repo
  url: https://github.com/aklivity/zillabase#readme
servers:
  - url: http://localhost:7184/v1
tags:
  - name: asyncapis
    description: Manage AsyncAPI specifications
paths:
  /asyncapis:
    get:
      tags:
        - asyncapis
      summary: List all AsyncAPI specifications
      operationId: listAsyncapis
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AsyncAPI"
        "400":
          description: Invalid output value
      security:
        - zillabase_auth:
            - "read:asyncapis"
    post:
      tags:
        - asyncapis
      summary: Add a new AsyncAPI specification
      description: Add a new AsyncAPI specification to Zillabase
      operationId: addAsyncapi
      requestBody:
        description: Create a new AsyncAPI specification in Zillabase
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncAPI"
        required: true
      responses:
        "201":
          description: Successful operation
        "400":
          description: Invalid input
      security:
        - petstore_auth:
            - "write:asyncapis"
  /asyncapis/{specificationId}:
    get:
      tags:
        - asyncapis
      summary: Find an AsyncAPI specification
      description: Find an AsyncAPI specification by ID
      operationId: getAsyncapi
      parameters:
        - name: specificationId
          in: path
          description: ID of AsyncAPI specification to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncAPI"
        "400":
          description: Invalid ID supplied
        "404":
          description: AsyncAPI specification not found
      security:
        - petstore_auth:
            - "read:asyncapis"
    put:
      tags:
        - asyncapis
      summary: Update an AsyncAPI specification
      description: Update an AsyncAPI specification by ID
      operationId: updateAsyncapi
      parameters:
        - name: specificationId
          in: path
          description: ID of AsyncAPI specification to return
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncAPI"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncAPI"
        "400":
          description: Invalid ID supplied or invalid input
        "404":
          description: AsyncAPI specification not found
      security:
        - petstore_auth:
            - "write:asyncapis"
    delete:
      tags:
        - asyncapis
      summary: Delete an AsyncAPI specification
      description: Delete an AsyncAPI specification by ID
      operationId: deleteAsyncapi
      parameters:
        - name: specificationId
          in: path
          description: ID of AsyncAPI specification to delete
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Invalid ID supplied
      security:
        - petstore_auth:
            - "write:asyncapis"
  /config/{configId}:
    get:
      tags:
        - config
      summary: Find a config
      description: Find a Config by ID
      operationId: getConfig
      parameters:
        - name: configId
          in: path
          description: ID of config to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Config not found
    put:
      tags:
        - config
      summary: Update an config
      description: Update an config by ID
      operationId: updateConfig
      parameters:
        - name: configId
          in: path
          description: ID of config to return
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent config in the config server
        required: true
      responses:
        "204":
          description: Successful operation
        "400":
          description: Invalid input
        "404":
          description: Config not found
    delete:
      tags:
        - config
      summary: Delete a config
      description: Delete a config by ID
      operationId: deleteConfig
      parameters:
        - name: configId
          in: path
          description: ID of config to return
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Invalid ID supplied
components:
  schemas:
    AsyncAPI:
      type: string #TODO asyncapi specification schema ref
    AsyncAPIs:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/AsyncAPI"
